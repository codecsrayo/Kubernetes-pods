apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
spec:
  selector:
   matchLabels:
    app: pgadmin
  replicas: 1
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:

        - name: pgadmin4
          image: dpage/pgadmin4
          imagePullPolicy: "IfNotPresent"
          env:
           - name: PGADMIN_DEFAULT_EMAIL
             value: "admin@admin.com"
           - name: PGADMIN_DEFAULT_PASSWORD
             value: "admin"
           - name: PGADMIN_PORT
             value: "80"          
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/pgadmin/data
              name: pgadmin
      volumes:
        - name: pgadmin
          persistentVolumeClaim:
            claimName: pgadmin-pv-claim

---
    kind: PersistentVolume
    apiVersion: v1
    metadata:
      name: pgadmin-pv-volume
      labels:
        type: local
        app: pgadmin
    spec:
      storageClassName: manual
      capacity:
        storage: 1Gi
      accessModes:
        - ReadWriteMany
      hostPath:
        path: "/mnt/data"
---
    kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: pgadmin-pv-claim
      labels:
        app: pgadmin
    spec:
      storageClassName: manual
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: 1Gi


---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
  labels:
    app: pgadmin
spec:
  selector:
   app: pgadmin
  type: NodePort
  ports:
   - port: 80
     nodePort: 30200